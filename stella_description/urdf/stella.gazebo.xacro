<?xml version="1.0" ?>
<robot name="stella" xmlns:xacro="http://ros.org/wiki/xacro">
  <xacro:arg name="laser_visual" default="false"/>
  <xacro:arg name="imu_visual" default="false"/>

  <gazebo reference="base_link">
    <material>Gazebo/DarkGrey</material>
  </gazebo>

  <gazebo reference="imu_link">
    <sensor type="imu" name="imu">
      <always_on>true</always_on>
      <visualize>$(arg imu_visual)</visualize>
    </sensor>
    <material>Gazebo/FlatBlack</material>
  </gazebo>

  <gazebo>
    <plugin name="imu_plugin" filename="libgazebo_ros_imu.so">
      <alwaysOn>true</alwaysOn>
      <bodyName>imu_link</bodyName>
      <frameName>imu_link</frameName>
      <topicName>imu</topicName>
      <serviceName>imu_service</serviceName>
      <gaussianNoise>0.0</gaussianNoise>
      <updateRate>0</updateRate>
      <imu>
        <noise>
          <type>gaussian</type>
          <rate>
            <mean>0.0</mean>
            <stddev>2e-4</stddev>
            <bias_mean>0.0000075</bias_mean>
            <bias_stddev>0.0000008</bias_stddev>
          </rate>
          <accel>
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
            <bias_mean>0.1</bias_mean>
            <bias_stddev>0.001</bias_stddev>
          </accel>
        </noise>
      </imu>
    </plugin>
  </gazebo>

  <gazebo reference="base_scan">
    <material>Gazebo/FlatBlack</material>
    <sensor type="ray" name="ydlidar">
      <pose>0 0 0 0 0 0</pose>
      <visualize>$(arg laser_visual)</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>2.0</resolution>
            <min_angle>-3.141592</min_angle>
            <max_angle>3.141592</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.12</min>
          <max>10.0</max>
          <resolution>0.015</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <always_on>true</always_on>
      <update_rate>5</update_rate>
      <plugin name="ydlidar" filename="libgazebo_ros_laser.so">
        <topicName>scan</topicName>
        <frameName>base_scan</frameName>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo reference="caster_link">
    <kp>500000.0</kp>
    <kd>50.0</kd>
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <material>Gazebo/FlatBlack</material>
  </gazebo>

<!--  <gazebo reference="caster_wheel_link">-->
<!--    <kp>500000.0</kp>-->
<!--    <kd>50.0</kd>-->
<!--    <mu1>0.1</mu1>-->
<!--    <mu2>0.1</mu2>-->
<!--    <material>Gazebo/FlatBlack</material>-->
<!--  </gazebo>-->

  <gazebo reference="wheel_l_link">
    <kp>500000.0</kp>
    <kd>50.0</kd>
    <mu1>5.0</mu1>
    <mu2>5.0</mu2>
    <material>Gazebo/FlatBlack</material>
  </gazebo>

  <gazebo reference="wheel_r_link">
    <kp>500000.0</kp>
    <kd>50.0</kd>
    <mu1>5.0</mu1>
    <mu2>5.0</mu2>
    <material>Gazebo/FlatBlack</material>
  </gazebo>

  <!-- joint publisher -->
<!--  <gazebo>-->
<!--    <plugin name="stella_joint_state" filename="libgazebo_ros_joint_state_publisher.so">-->
<!--      <ros>-->
<!--        <remapping>~/out:=joint_states</remapping>-->
<!--      </ros>-->
<!--      <update_rate>30</update_rate>-->

<!--      <joint_name>caster_joint</joint_name>-->
<!--      <joint_name>wheel_l_joint</joint_name>-->
<!--      <joint_name>wheel_r_joint</joint_name>-->
<!--    </plugin>-->
<!--  </gazebo>-->

  <!-- differential drive -->
  <gazebo>
    <plugin name="stella_joint_controller" filename="libgazebo_ros_diff_drive.so">
      <commandTopic>cmd_vel</commandTopic>
      <updateRate>30</updateRate>
      <!-- wheel -->
      <leftJoint>wheel_l_joint</leftJoint>
      <rightJoint>wheel_r_joint</rightJoint>
      <!-- kinematics -->
      <wheelSeparation>${axleLength}</wheelSeparation>
      <wheelDiameter>${wheelRadius*2}</wheelDiameter>
      <!-- limits -->
      <wheelTorque>13.5</wheelTorque>
      <wheelAcceleration>10.43</wheelAcceleration>
      <!-- output -->
      <publishOdom>false</publishOdom>
      <publishOdomTF>true</publishOdomTF>
      <publishWheelTF>false</publishWheelTF>
      <publishTF>true</publishTF>
      <publishWheelJointState>true</publishWheelJointState>

      <odometryFrame>odom</odometryFrame>
      <odometryTopic>odom</odometryTopic>
      <odometrySource>world</odometrySource>
      <robotBaseFrame>base_footprint</robotBaseFrame>
      <rosDebugLevel>na</rosDebugLevel>
    </plugin>
  </gazebo>
    

</robot>
